# データベース

## 内容

| ファイル名                 | 内容                                               |
| -------------------------- | -------------------------------------------------- |
| [schema.sql](./schema.sql) | テーブル定義 (スキーマ) が記述されたファイルです。 |
| [seeds.sql](./seeds.sql)   | 初期データが記述されたファイルです。               |

## テーブル

### users

ユーザーデータを格納するテーブルです。

| カラム名            | データ型 | デフォルト値         | 用途                      |
| ------------------- | -------- | -------------------- | ------------------------- |
| `id`                | 整数     | 自動で連番が振られる | ユーザー ID               |
| `name`              | 文字列   |                      | ユーザー名                |
| `play_count`        | 整数     | 0                    | プレイ回数                |
| `high_score`        | 整数     | 0                    | ハイスコア                |
| `max_depth`         | 整数     | 0                    | DEPTH の最高記録          |
| `session_id`        | 文字列   | 0                    | 現在有効なセッションの ID |
| `last_logged_in_at` | 日時     | 0                    | 最終ログイン日時          |
| `last_played_at`    | 日時     | 0                    | 最終プレイ日時            |
| `created_at`        | 日時     | 0                    | 作成日時                  |
| `updated_at`        | 日時     | 0                    | 最終更新日時              |

### user_achievements

ユーザーの達成済みアチーブメントを格納するテーブルです。

| カラム名         | データ型 | デフォルト値 | 用途              |
| ---------------- | -------- | ------------ | ----------------- |
| `user_id`        | 整数     |              | ユーザー ID       |
| `achievement_id` | 整数     |              | アチーブメント ID |
| `achieved_at`    | 日時     |              | 達成日時          |

## タスク

Visual Studio Code (GitHub Codespaces) で利用できるデータベース関連のタスク一覧を次に示します。

タスクの対象となるデータベースは [環境変数](../server/README.md#環境変数) に基づきます。

### `db:create`

データベースを作成します。

テーブルは作成されません。

### `db:migrate`

作成済みのデータベースに [schema.sql](./schema.sql) を適用し、テーブルを作成します。

テーブルが作成済みの場合は、[schema.sql](./schema.sql) の内容に一致するようにテーブル定義を変更します。

### `db:seed`

作成済みのデータベースに [seeds.sql](./seeds.sql) を適用し、初期データを作成します。

### `db:drop`

作成済みのデータベースを削除します。

### `db:reset`

`db:drop`, `db:create`, `db:migrate`, `db:seed` を順に実行し、データベースをリセットします。

### `db:fake`

ランダムなユーザーデータを最大 300 件生成します。

手っ取り早く動作確認用のデータを用意したい場合に便利です。
